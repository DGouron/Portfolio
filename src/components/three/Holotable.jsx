/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Uğur Yakışık (https://sketchfab.com/UgurYksk)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/sci-fi-table-simple-f7c3a3e44a144cb190bdd318da293b10
title: Sci-Fi Table (Simple)
*/

import React from 'react';
import { useGLTF } from '@react-three/drei';
import { goTo } from '../../utils/navigation';
import TextCustom from './TextCustom';

export default function Holotable() {
  const { nodes, materials } = useGLTF('assets/holotable/scene.gltf')
  const [isHovered, setIsHovered] = React.useState(false);
  const [cameraRotation, setCameraRotation] = React.useState([0, 0, 0]);

  function handleTabletClick(){
    goTo('skills');
  }

  return (
    <>
      <group dispose={null}
      onClick={() => handleTabletClick()}
      onPointerEnter={(e ) => {
        setIsHovered(true),
        setCameraRotation(e.camera.rotation)
      }}
      onPointerLeave={() => setIsHovered(false)}>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group position={[0, 153.9, -57.23]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh castShadow receiveShadow geometry={nodes.defaultMaterial.geometry} material={materials.energy} />
            </group>
            <group position={[0, 140.91, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh castShadow receiveShadow geometry={nodes.defaultMaterial_1.geometry} material={materials.context} />
            </group>
            <group position={[0, 140.91, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh castShadow receiveShadow geometry={nodes.defaultMaterial_2.geometry} material={materials.screen} />
              <mesh castShadow receiveShadow geometry={nodes.defaultMaterial_3.geometry} material={materials.monitor} />
              <mesh castShadow receiveShadow geometry={nodes.defaultMaterial_4.geometry} material={materials.screen2} />
            </group>
            <group position={[211.39, 76.09, 0]} scale={100}>
              <mesh castShadow receiveShadow geometry={nodes.defaultMaterial_5.geometry} material={materials.material} />
            </group>
            <group position={[211.39, 134.92, 72.03]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh castShadow receiveShadow geometry={nodes.defaultMaterial_6.geometry} material={materials.material} />
            </group>
            <group position={[0, 140.91, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <mesh castShadow receiveShadow geometry={nodes.defaultMaterial_7.geometry} material={materials.body} />
              <mesh castShadow receiveShadow geometry={nodes.defaultMaterial_8.geometry} material={materials.screen3} />
            </group>
          </group>
        </group>
      </group>
      {isHovered ? <TextCustom message={"Voir mes compétences"} position={[50, 200, 0]} color={"#ffffff"} size={20} rotation={cameraRotation} bevelThickness={.5} /> : null }
    </>
  )
}

useGLTF.preload('assets/holotable/scene.gltf')
